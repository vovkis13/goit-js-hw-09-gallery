{"version":3,"sources":["js/data.js","js/refs.js","js/render-gallery.js","js/open-modal.js","js/close-modal.js","js/turn-image.js","js/app.js","index.js"],"names":["preview","original","description","lightboxRef","document","querySelector","lightboxImgRef","lightboxBtnRef","overlayRef","galleryRef","renderGallery","galleryItems","listOfImagesText","forEach","insertAdjacentHTML","openOriginalImage","e","ImgRef","modalRef","preventDefault","setAttribute","target","dataset","source","classList","toggle","closeOriginalImg","turnImage","key","curImg","sibling","parentNode","previousElementSibling","nextElementSibling","currentImg","refs","addEventListener","nodeName","window","contains"],"mappings":"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","file":"src.6b3cfeb2.js","sourceRoot":"..\\src","sourcesContent":["export default [\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825__340.jpg',\r\n    original:\r\n      'https://cdn.pixabay.com/photo/2019/05/14/16/43/himilayan-blue-poppy-4202825_1280.jpg',\r\n    description: 'Hokkaido Flower',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2019/05/14/22/05/container-4203677_1280.jpg',\r\n    description: 'Container Haulage Freight',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2019/05/16/09/47/beach-4206785_1280.jpg',\r\n    description: 'Aerial Beach View',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2016/11/18/16/19/flowers-1835619_1280.jpg',\r\n    description: 'Flower Blooms',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2018/09/13/10/36/mountains-3674334_1280.jpg',\r\n    description: 'Alpine Mountains',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2019/05/16/23/04/landscape-4208571_1280.jpg',\r\n    description: 'Mountain Lake Sailing',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2019/05/17/09/27/the-alps-4209272_1280.jpg',\r\n    description: 'Alpine Spring Meadows',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2019/05/16/21/10/landscape-4208255_1280.jpg',\r\n    description: 'Nature Landscape',\r\n  },\r\n  {\r\n    preview: 'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843__340.jpg',\r\n    original: 'https://cdn.pixabay.com/photo/2019/05/17/04/35/lighthouse-4208843_1280.jpg',\r\n    description: 'Lighthouse Coast Sea',\r\n  },\r\n];\r\n","export default {\r\n  lightboxRef: document.querySelector(\"div.lightbox\"),\r\n  lightboxImgRef: document.querySelector(\"img.lightbox__image\"),\r\n  lightboxBtnRef: document.querySelector(\r\n    \"button[data-action='close-lightbox']\"\r\n  ),\r\n  overlayRef: document.querySelector(\"div.lightbox__overlay\"),\r\n  galleryRef: document.querySelector(\"ul.js-gallery\"),\r\n};\r\n","export default function renderGallery(galleryItems, galleryRef) {\r\n  let listOfImagesText = '';\r\n  galleryItems.forEach(\r\n    ({ preview, original, description }) =>\r\n      (listOfImagesText += `\r\n  <li class=\"gallery__item\">\r\n    <a\r\n      class=\"gallery__link\"\r\n      href=\"${original}\"\r\n    >\r\n      <img\r\n        class=\"gallery__image\"\r\n        src=\"${preview}\"\r\n        data-source=\"${original}\"\r\n        alt=\"${description}\"\r\n      />\r\n    </a>\r\n  </li>\r\n  `),\r\n  );\r\n  galleryRef.insertAdjacentHTML('afterbegin', listOfImagesText);\r\n}\r\n","export default function openOriginalImage(e, ImgRef, modalRef) {\r\n  e.preventDefault();\r\n  ImgRef.setAttribute(\"src\", e.target.dataset.source);\r\n  modalRef.classList.toggle(\"is-open\");\r\n  return e.target;\r\n}\r\n","export default function closeOriginalImg(ImgRef, modalRef) {\r\n  ImgRef.setAttribute(\"src\", \"\");\r\n  modalRef.classList.toggle(\"is-open\");\r\n}\r\n","export default function turnImage(key, curImg, ImgRef) {\r\n  let sibling = false;\r\n\r\n  if (key === \"ArrowLeft\")\r\n    sibling = curImg.parentNode.parentNode.previousElementSibling;\r\n  if (key === \"ArrowRight\")\r\n    sibling = curImg.parentNode.parentNode.nextElementSibling;\r\n  if (sibling) curImg = sibling.querySelector(\"img.gallery__image\");\r\n  ImgRef.setAttribute(\"src\", curImg.dataset.source);\r\n  return curImg;\r\n}\r\n","import galleryItems from \"./data\";\r\nimport refs from \"./refs\";\r\nimport renderGallery from \"./render-gallery\";\r\nimport openOriginalImage from \"./open-modal\";\r\nimport closeOriginalImg from \"./close-modal\";\r\nimport turnImage from \"./turn-image\";\r\nconst { lightboxRef, lightboxImgRef, lightboxBtnRef, overlayRef, galleryRef } =\r\n  refs;\r\nlet currentImg;\r\n\r\nrenderGallery(galleryItems, galleryRef);\r\n\r\n//Open original image\r\ngalleryRef.addEventListener(\"click\", (e) => {\r\n  if (e.target.nodeName === \"IMG\")\r\n    currentImg = openOriginalImage(e, lightboxImgRef, lightboxRef);\r\n});\r\n\r\n//Close original image on x-button click\r\nlightboxBtnRef.addEventListener(\"click\", (e) =>\r\n  closeOriginalImg(lightboxImgRef, lightboxRef)\r\n);\r\n\r\n//Close original image on overlay click\r\noverlayRef.addEventListener(\"click\", (e) =>\r\n  closeOriginalImg(lightboxImgRef, lightboxRef)\r\n);\r\n\r\nwindow.addEventListener(\"keydown\", (e) => {\r\n  if (!lightboxRef.classList.contains(\"is-open\")) return;\r\n  //Close original image on Escape keydown\r\n  if (e.key === \"Escape\") closeOriginalImg(lightboxImgRef, lightboxRef);\r\n  //Change image on Left-Right keydown\r\n  if (e.key === \"ArrowLeft\" || e.key === \"ArrowRight\")\r\n    currentImg = turnImage(e.key, currentImg, lightboxImgRef);\r\n});\r\n","import './sass/main.scss';\r\nimport './js/app.js';\r\n"]}